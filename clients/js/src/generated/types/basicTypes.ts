/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  publicKey as publicKeySerializer,
  string,
  struct,
  u16,
  u32,
  u64,
  u8,
} from '@metaplex-foundation/umi/serializers';
import {
  ExampleEnum,
  ExampleEnumArgs,
  ExampleStruct,
  ExampleStructArgs,
  ExampleVariant,
  ExampleVariantArgs,
  getExampleEnumSerializer,
  getExampleStructSerializer,
  getExampleVariantSerializer,
} from '.';

export type BasicTypes = {
  unsigned8: number;
  unsigned16: number;
  unsigned32: number;
  unsigned64: bigint;
  publicKey: PublicKey;
  string: string;
  exampleStruct: ExampleStruct;
  exampleEnum: ExampleEnum;
  exampleVariant: ExampleVariant;
  array8: Array<number>;
  array16: Array<number>;
  array32: Array<number>;
  array64: Array<bigint>;
  arrayPublicKey: Array<PublicKey>;
  arrayString: Array<string>;
  arrayExampleStruct: Array<ExampleStruct>;
  arrayExampleEnum: Array<ExampleEnum>;
  arrayExampleVariant: Array<ExampleVariant>;
};

export type BasicTypesArgs = {
  unsigned8: number;
  unsigned16: number;
  unsigned32: number;
  unsigned64: number | bigint;
  publicKey: PublicKey;
  string: string;
  exampleStruct: ExampleStructArgs;
  exampleEnum: ExampleEnumArgs;
  exampleVariant: ExampleVariantArgs;
  array8: Array<number>;
  array16: Array<number>;
  array32: Array<number>;
  array64: Array<number | bigint>;
  arrayPublicKey: Array<PublicKey>;
  arrayString: Array<string>;
  arrayExampleStruct: Array<ExampleStructArgs>;
  arrayExampleEnum: Array<ExampleEnumArgs>;
  arrayExampleVariant: Array<ExampleVariantArgs>;
};

export function getBasicTypesSerializer(): Serializer<
  BasicTypesArgs,
  BasicTypes
> {
  return struct<BasicTypes>(
    [
      ['unsigned8', u8()],
      ['unsigned16', u16()],
      ['unsigned32', u32()],
      ['unsigned64', u64()],
      ['publicKey', publicKeySerializer()],
      ['string', string()],
      ['exampleStruct', getExampleStructSerializer()],
      ['exampleEnum', getExampleEnumSerializer()],
      ['exampleVariant', getExampleVariantSerializer()],
      ['array8', array(u8(), { size: 10 })],
      ['array16', array(u16(), { size: 10 })],
      ['array32', array(u32(), { size: 10 })],
      ['array64', array(u64(), { size: 10 })],
      ['arrayPublicKey', array(publicKeySerializer(), { size: 10 })],
      ['arrayString', array(string(), { size: 10 })],
      ['arrayExampleStruct', array(getExampleStructSerializer(), { size: 10 })],
      ['arrayExampleEnum', array(getExampleEnumSerializer(), { size: 10 })],
      [
        'arrayExampleVariant',
        array(getExampleVariantSerializer(), { size: 5 }),
      ],
    ],
    { description: 'BasicTypes' }
  ) as Serializer<BasicTypesArgs, BasicTypes>;
}
